// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebsiteProject.Data;

namespace WebsiteProject.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20220128223225_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WebsiteProject.Models.Cameras", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("camera_model")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("camera_type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("enabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("image")
                        .HasColumnType("text");

                    b.Property<int>("resolution")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Cameras");
                });

            modelBuilder.Entity("WebsiteProject.Models.Role", b =>
                {
                    b.Property<int>("role_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.HasKey("role_id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("WebsiteProject.Models.User", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("UserInfoid")
                        .HasColumnType("int");

                    b.Property<DateTime>("loginDate")
                        .HasColumnType("datetime");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("role_id")
                        .HasColumnType("int");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("user_id");

                    b.HasIndex("UserInfoid");

                    b.HasIndex("role_id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebsiteProject.Models.UserInfo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10);

                    b.Property<int>("phoneNumber")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("UserInfos");
                });

            modelBuilder.Entity("WebsiteProject.Models.User", b =>
                {
                    b.HasOne("WebsiteProject.Models.UserInfo", "UserInfo")
                        .WithMany("Users")
                        .HasForeignKey("UserInfoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebsiteProject.Models.Role", "Role")
                        .WithMany("User")
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
